#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Allow skipping hooks with SKIP_HOOKS=1 git commit
if [ "$SKIP_HOOKS" = "1" ]; then
  echo "‚ö†Ô∏è  Skipping pre-commit hooks (SKIP_HOOKS=1)"
  exit 0
fi

echo "üîç Running pre-commit checks..."

# Stage 1: Fast checks (lint & format)
echo "  ‚Üí Running lint-staged..."
pnpm lint-staged
if [ $? -ne 0 ]; then
  echo "‚ùå Linting failed. Please fix formatting issues."
  exit 1
fi

# Stage 2: Type checking
echo "  ‚Üí Type checking..."
pnpm type-check --pretty
if [ $? -ne 0 ]; then
  echo "‚ùå Type check failed. Please fix TypeScript errors."
  exit 1
fi

# Stage 3: Critical path tests (only for files that affect critical logic)
# Check if any critical files were modified
CRITICAL_FILES=$(git diff --cached --name-only | grep -E '(checkout|payment|order|square)' || true)

if [ -n "$CRITICAL_FILES" ]; then
  echo "  ‚Üí Running critical path tests (critical files modified)..."
  pnpm test:critical --bail --silent
  if [ $? -ne 0 ]; then
    echo "‚ùå Critical tests failed. Please fix before committing."
    exit 1
  fi
else
  echo "  ‚Üí Skipping critical tests (no critical files modified)"
fi

echo "‚úÖ All pre-commit checks passed!"
echo ""
echo "üí° Tip: Use 'SKIP_HOOKS=1 git commit' to skip hooks for urgent fixes"
