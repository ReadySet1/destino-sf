{
  "name": "destino-sf",
  "private": true,
  "type": "module",
  "packageManager": "pnpm@10.14.0",
  "scripts": {
    "dev": "next dev",
    "dev:turbo": "next dev --turbopack",
    "prebuild": "prisma generate",
    "build": "next build",
    "vercel-build": "prisma generate && next build",
    "typecheck-build": "tsc --noEmit && prisma generate && next build",
    "debug-ts": "tsc --noEmit --traceResolution --listFiles",
    "type-check": "tsc --noEmit --project tsconfig.json",
    "type-check-tests": "tsc --noEmit --project tsconfig.test.json",
    "ts-diagnostic": "tsx scripts/ts-diagnostic.ts",
    "start": "next start",
    "test": "jest --passWithNoTests",
    "test:unit": "jest --testPathPattern='(utils|lib)' --passWithNoTests",
    "test:api": "jest --testEnvironment=node --testPathPattern='api' --passWithNoTests",
    "test:components": "jest --testEnvironment=jsdom --testPathPattern='components' --passWithNoTests",
    "test:coverage": "jest --coverage --passWithNoTests",
    "test:ci": "jest --coverage --watchAll=false --no-cache",
    "test:watch": "jest --watch --passWithNoTests",
    "test:node": "jest --selectProjects node --passWithNoTests",
    "test:jsdom": "jest --selectProjects jsdom --passWithNoTests",
    "test:integration": "jest --selectProjects node src/__tests__/integration --no-cache --runInBand",
    "test:e2e": "playwright test",
    "test:unit:watch": "jest --selectProjects node --watch src/__tests__/lib src/__tests__/utils --no-cache",
    "test:components:watch": "jest --selectProjects jsdom --watch src/__tests__/components --no-cache",
    "test:basic": "jest --selectProjects node src/__tests__/utils/basic.test.ts --no-cache",
    "test:shipping": "jest --selectProjects node src/__tests__/lib/shippingUtils.test.ts --no-cache",
    "test:delivery": "jest --selectProjects node src/__tests__/lib/deliveryUtils.test.ts --no-cache",
    "test:cart-summary": "jest --selectProjects jsdom src/__tests__/components/cart/CartSummary.test.tsx --no-cache",
    "test:spotlight": "jest --selectProjects node src/__tests__/app/api/**/spotlight* src/__tests__/types/spotlight* src/__tests__/utils/spotlight* --no-cache",
    "test:spotlight:api": "jest --selectProjects node src/__tests__/app/api/**/spotlight* --no-cache",
    "test:spotlight:components": "jest --selectProjects jsdom src/__tests__/components/admin/SpotlightPick* --no-cache",
    "test:spotlight:types": "jest --selectProjects node src/__tests__/types/spotlight* --no-cache",
    "test:spotlight:all": "jest --selectProjects node,jsdom --no-cache --testPathPattern='spotlight'",
    "test:ci:unit": "jest --selectProjects node --coverage --watchAll=false --no-cache src/__tests__/lib src/__tests__/utils",
    "test:ci:components": "jest --selectProjects jsdom --coverage --watchAll=false --no-cache src/__tests__/components",
    "test:staging": "NODE_ENV=staging jest --selectProjects node src/__tests__/integration --no-cache --runInBand",
    "test:critical": "jest --selectProjects node src/__tests__/app/api/checkout src/__tests__/app/actions/orders.test.ts src/__tests__/lib/square --no-cache",
    "test:payments": "jest --selectProjects node src/__tests__/app/api/checkout src/__tests__/lib/square/payments-api.test.ts --no-cache",
    "test:orders": "jest --selectProjects node src/__tests__/app/actions/orders.test.ts src/__tests__/app/api/orders --no-cache",
    "test:coverage:critical": "jest --selectProjects node --coverage src/__tests__/app/api/checkout src/__tests__/app/actions/orders.test.ts src/__tests__/lib/square --no-cache",
    "test:ci:critical": "jest --selectProjects node --coverage --watchAll=false --no-cache src/__tests__/app/api/checkout src/__tests__/app/actions/orders.test.ts src/__tests__/lib/square",
    "test:dashboard": "tsx src/__tests__/utils/test-dashboard.ts",
    "test:dashboard:generate": "pnpm test:coverage && tsx -e \"import('./src/__tests__/utils/test-dashboard.ts').then(m => m.generateDashboardFromJest())\"",
    "test:seed": "tsx -e \"import('./src/__tests__/setup/test-db.ts').then(m => { m.setupTestDatabase().then(() => m.seedTestData()).then(() => console.log('✅ Test database seeded')).catch(console.error) })\"",
    "test:reset": "tsx -e \"import('./src/__tests__/setup/test-db.ts').then(m => { m.setupTestDatabase().then(() => m.resetTestDatabase()).then(() => console.log('✅ Test database reset')).catch(console.error) })\"",
    "test:factories": "jest --selectProjects node src/__tests__/factories --no-cache",
    "test:badges": "tsx scripts/generate-coverage-badges.ts",
    "test:full-report": "pnpm test:coverage && pnpm test:dashboard:generate && pnpm test:badges",
    "test:fix": "node scripts/diagnose-tests.js",
    "test:report": "tsx scripts/generate-test-report.ts",
    "test:monitor": "node scripts/test-monitor.js",
    "test:quick": "jest --bail --findRelatedTests",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "type-check:watch": "tsc --noEmit --watch",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "validate": "pnpm run type-check && pnpm run lint",
    "validate-db": "tsx scripts/validate-database-config.ts",
    "fix-all": "pnpm run format && pnpm run lint:fix",
    "seed": "tsx prisma/seed.ts",
    "db:seed": "tsx prisma/seed.ts",
    "db:reset": "pnpm prisma migrate reset && pnpm db:seed",
    "fix-admin-auth": "tsx scripts/fix-admin-auth.ts",
    "fix-images": "node src/scripts/update-missing-images.mjs",
    "clean-orders": "tsx src/scripts/clean-testing-orders.ts",
    "clean-orders:preview": "tsx src/scripts/clean-testing-orders.ts --dry-run",
    "clean-orders:execute": "tsx src/scripts/clean-testing-orders.ts --execute --confirm",
    "clean-orders:test-emails": "tsx src/scripts/clean-testing-orders.ts --test-emails-only --execute",
    "restore-orders": "tsx src/scripts/restore-orders-from-backup.ts",
    "backup-db": "tsx src/scripts/backup-database.ts",
    "backup-db:sql": "tsx src/scripts/backup-database.ts --format=sql --compress",
    "backup-db:dir": "tsx src/scripts/backup-database.ts --format=directory",
    "backup-db:schema": "tsx src/scripts/backup-database.ts --schema-only --format=sql",
    "restore-db": "tsx src/scripts/restore-database.ts",
    "safe-cleanup": "tsx src/scripts/safe-cleanup-workflow.ts",
    "safe-cleanup:preview": "tsx src/scripts/safe-cleanup-workflow.ts --preview",
    "safe-cleanup:execute": "tsx src/scripts/safe-cleanup-workflow.ts --execute",
    "safe-cleanup:test-emails": "tsx src/scripts/safe-cleanup-workflow.ts --execute --test-emails-only",
    "square-sync": "tsx src/scripts/sync-square-products.ts",
    "square-sync-api": "curl -X POST http://localhost:3000/api/square/sync",
    "test-square-tokens": "tsx src/scripts/setup-square-tokens.ts",
    "setup-square-env": "tsx src/scripts/setup-square-tokens.ts --create-template",
    "clean-products": "node src/scripts/clean-invalid-products.mjs",
    "test-new-db": "node src/scripts/test-new-db.mjs",
    "test-new-db-ts": "tsx src/scripts/test-new-db.ts",
    "setup-test-db": "tsx src/scripts/setup-test-db.ts",
    "diagnose-db": "tsx src/scripts/diagnose-db-connection.ts",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:report": "playwright show-report",
    "test:e2e:critical": "playwright test tests/e2e/01-complete-purchase.spec.ts tests/e2e/04-catering-inquiry.spec.ts",
    "test:e2e:mobile": "playwright test --project='Mobile Chrome' --project='Mobile Safari'",
    "test:e2e:ci": "playwright test --reporter=junit",
    "test:e2e:smoke": "playwright test --grep='smoke'",
    "sync-users": "tsx src/scripts/sync-existing-users.ts",
    "sync-users:dry-run": "tsx src/scripts/sync-existing-users.ts --dry-run",
    "test:e2e:smoke-production": "NODE_ENV=production playwright test --grep='smoke' --config=playwright.config.production.ts",
    "test:pre-deploy": "pnpm test:e2e:critical && pnpm test:e2e:mobile",
    "setup-sandbox": "./scripts/setup-vercel-sandbox.sh",
    "validate-sandbox": "tsx scripts/validate-sandbox-env.ts",
    "test-sandbox": "pnpm validate-sandbox && curl -s http://localhost:3000/api/debug/square-config | jq",
    "deploy-sandbox": "pnpm validate-sandbox && vercel --prod",
    "deploy-preview": "pnpm validate-sandbox && vercel",
    "set-url": "./scripts/set-correct-url.sh",
    "fix-url": "./scripts/fix-vercel-env.sh",
    "monitor-stub-orders": "tsx scripts/monitor-stub-orders.ts",
    "test:performance": "playwright test --grep='performance'",
    "test:accessibility": "playwright test --grep='accessibility'",
    "validate-test-data": "tsx tests/fixtures/validate-data.ts",
    "reset-test-db": "tsx tests/setup/reset-database.ts",
    "seed-test-data": "tsx tests/setup/seed-database.ts",
    "check-test-images": "tsx tests/utils/check-images.ts",
    "sync-test-data": "tsx tests/utils/sync-production-data.ts",
    "postinstall": "prisma generate",
    "test:square": "NODE_ENV=development tsx --env-file=.env.local src/scripts/diagnose-square-sync.ts"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@googlemaps/js-api-loader": "^1.16.10",
    "@hookform/resolvers": "^4.1.3",
    "@prisma/client": "^6.16.2",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@react-email/components": "^0.0.38",
    "@sentry/nextjs": "^9.46.0",
    "@sentry/tracing": "^7.120.4",
    "@square/web-sdk": "^2.1.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/ssr": "latest",
    "@supabase/supabase-js": "^2.57.4",
    "@t3-oss/env-core": "^0.12.0",
    "@t3-oss/env-nextjs": "^0.12.0",
    "@tanstack/react-query": "^5.87.4",
    "@types/twilio": "^3.19.3",
    "@upstash/ratelimit": "^2.0.6",
    "@upstash/redis": "^1.35.3",
    "@vercel/og": "^0.6.8",
    "autoprefixer": "10.4.20",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "decimal.js": "^10.6.0",
    "embla-carousel-autoplay": "^8.6.0",
    "embla-carousel-react": "^8.6.0",
    "framer-motion": "^12.23.12",
    "isomorphic-dompurify": "^2.26.0",
    "lucide-react": "^0.468.0",
    "next": "15.5.3",
    "next-auth": "^4.24.11",
    "next-themes": "^0.4.6",
    "p-limit": "^7.1.1",
    "prettier": "^3.6.2",
    "qrcode.react": "^4.2.0",
    "react": "19.1.0",
    "react-day-picker": "8.10.1",
    "react-dom": "19.1.0",
    "react-email": "^4.2.11",
    "react-hook-form": "^7.62.0",
    "react-remove-scroll": "^2.7.1",
    "resend": "^4.8.0",
    "shippo": "^2.15.0",
    "sonner": "^2.0.7",
    "square": "^42.3.0",
    "styled-components": "^6.1.19",
    "tailwind-merge": "^3.3.1",
    "twilio": "^5.9.0",
    "uuid": "^11.1.0",
    "zod": "^3.25.76",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.35.0",
    "@faker-js/faker": "^10.0.0",
    "@playwright/test": "^1.55.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "14.6.1",
    "@types/google.maps": "^3.58.1",
    "@types/jest": "^29.5.14",
    "@types/node": "22.10.2",
    "@types/react": "19.1.2",
    "@types/react-dom": "19.1.2",
    "@types/semver": "^7.7.1",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "@typescript-eslint/parser": "^8.43.0",
    "dotenv": "^16.6.1",
    "dotenv-cli": "^8.0.0",
    "eslint": "^8.57.1",
    "eslint-config-next": "15.3.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "globals": "^16.4.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-mock-extended": "^4.0.0",
    "k6": "^0.0.0",
    "mixpanel-browser": "^2.70.0",
    "node-fetch": "^2.7.0",
    "pg": "^8.16.3",
    "postcss": "8.4.49",
    "prisma": "^6.16.2",
    "react-remove-scroll-bar": "^2.3.8",
    "tailwindcss": "3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.5",
    "typescript": "5.7.2",
    "whatwg-url": "^14.2.0"
  },
  "pnpm": {
    "overrides": {
      "@types/react": "19.1.2",
      "@types/react-dom": "19.1.2"
    }
  }
}
