name: Lighthouse CI Performance Testing

on:
  pull_request:
    branches: [main, development]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '10.11.1'

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          # Supabase environment variables required for build
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      - name: Run Lighthouse CI
        run: |
          pnpm add -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci
          retention-days: 30

      - name: Generate performance summary
        if: always()
        run: |
          echo "# ðŸ“Š Lighthouse Performance Report" > performance-summary.md
          echo "" >> performance-summary.md
          echo "## Key Metrics" >> performance-summary.md
          echo "" >> performance-summary.md
          echo "### Performance Budgets" >> performance-summary.md
          echo "- **Performance Score**: â‰¥ 80%" >> performance-summary.md
          echo "- **Accessibility Score**: â‰¥ 90%" >> performance-summary.md
          echo "- **Best Practices Score**: â‰¥ 85%" >> performance-summary.md
          echo "- **SEO Score**: â‰¥ 90%" >> performance-summary.md
          echo "" >> performance-summary.md
          echo "### Core Web Vitals" >> performance-summary.md
          echo "- **First Contentful Paint (FCP)**: < 2s" >> performance-summary.md
          echo "- **Largest Contentful Paint (LCP)**: < 3s" >> performance-summary.md
          echo "- **Cumulative Layout Shift (CLS)**: < 0.1" >> performance-summary.md
          echo "- **Total Blocking Time (TBT)**: < 500ms" >> performance-summary.md
          echo "" >> performance-summary.md
          echo "### Pages Tested" >> performance-summary.md
          echo "- Homepage" >> performance-summary.md
          echo "- Empanadas Category" >> performance-summary.md
          echo "- Alfajores Category" >> performance-summary.md
          echo "- Catering Page" >> performance-summary.md
          echo "- Cart Page" >> performance-summary.md
          echo "- Checkout Page" >> performance-summary.md
          echo "" >> performance-summary.md
          echo "ðŸ“ˆ **Full report available in artifacts**" >> performance-summary.md

      - name: Upload performance summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-summary
          path: performance-summary.md
          retention-days: 30

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            // Read the performance summary if it exists
            let summary = '## ðŸ“Š Lighthouse CI Performance Report\n\n';
            summary += 'Performance audit completed. Check the artifacts for detailed results.\n\n';
            summary += '### Tested Pages\n';
            summary += '- Homepage\n';
            summary += '- Product Categories (Empanadas, Alfajores)\n';
            summary += '- Catering Page\n';
            summary += '- Cart & Checkout\n\n';
            summary += '### Performance Budgets\n';
            summary += '- Performance: â‰¥ 80%\n';
            summary += '- Accessibility: â‰¥ 90%\n';
            summary += '- Best Practices: â‰¥ 85%\n';
            summary += '- SEO: â‰¥ 90%\n\n';
            summary += 'ðŸ“ˆ [View detailed Lighthouse report in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  # Mobile performance testing (separate job for clarity)
  lighthouse-mobile:
    name: Lighthouse Mobile Performance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          # Supabase environment variables required for build
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      - name: Run Lighthouse CI (Mobile)
        run: |
          pnpm add -g @lhci/cli@0.13.x

          # Create mobile config
          cat > lighthouserc.mobile.json <<EOF
          {
            "ci": {
              "collect": {
                "startServerCommand": "pnpm start",
                "startServerReadyPattern": "started server on",
                "url": ["http://localhost:3000"],
                "numberOfRuns": 2,
                "settings": {
                  "preset": "mobile",
                  "formFactor": "mobile",
                  "screenEmulation": {
                    "mobile": true,
                    "width": 375,
                    "height": 667,
                    "deviceScaleFactor": 2,
                    "disabled": false
                  }
                }
              },
              "assert": {
                "preset": "lighthouse:recommended",
                "assertions": {
                  "categories:performance": ["warn", { "minScore": 0.7 }],
                  "categories:accessibility": ["error", { "minScore": 0.9 }]
                }
              }
            }
          }
          EOF

          lhci autorun --config=lighthouserc.mobile.json

      - name: Upload Mobile Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-mobile-results
          path: .lighthouseci
          retention-days: 30
